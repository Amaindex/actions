name: Build Kernel for VM with Local Config

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build (e.g., ax from amaindex/linux)'
        required: true
        default: 'master'
      config_name:
        description: 'Name of kernel config file in build-kernel/ directory'
        required: true
        default: 'config-debian-12-edited'

jobs:
  build-kernel:
    runs-on: ubuntu-latest
    env:
      INSTALL_DIR_NAME: _install

    strategy:
      matrix:
        arch: [amd64]

    steps:
      - name: Checkout Project Repository
        uses: actions/checkout@v4

      - name: Checkout Linux Repository
        uses: actions/checkout@v4
        with:
          repository: amaindex/linux
          ref: ${{ github.event.inputs.branch }}
          path: linux_source

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc bison flex libelf-dev libssl-dev \
                                  gcc make libncurses-dev kmod cpio dwarves pahole rsync \
                                  libbpf-dev

      - name: Configure Kernel
        working-directory: ./linux_source
        run: |
          echo "--- Copying Local Config ---"
          LOCAL_CONFIG_PATH="../build-kernel/${{ github.event.inputs.config_name }}"
          cp "${LOCAL_CONFIG_PATH}" .config
          echo "Copied ${LOCAL_CONFIG_PATH} to .config"
          make olddefconfig
          echo "Ran olddefconfig to finalize config"

      - name: Build Kernel and Modules
        working-directory: ./linux_source
        run: |
          echo "--- Building Kernel (bzImage) ---"
          make -j$(nproc) bzImage
          echo "--- Building Modules ---"
          make -j$(nproc) modules

      - name: Package Kernel, Modules, and Headers
        working-directory: ./linux_source
        run: |
          echo "--- Determining Kernel Version ---"
          KERNEL_VERSION=$(make -s kernelrelease)
          echo "Kernel Version: ${KERNEL_VERSION}"
          echo "KERNEL_VERSION=${KERNEL_VERSION}" >> $GITHUB_ENV

          echo "--- Setting Up Installation Directory ---"
          INSTALL_PATH="${GITHUB_WORKSPACE}/${INSTALL_DIR_NAME}"
          mkdir -p ${INSTALL_PATH}/boot
          mkdir -p ${INSTALL_PATH}/lib/modules/${KERNEL_VERSION}
          mkdir -p ${INSTALL_PATH}/usr/src/linux-headers-${KERNEL_VERSION}
          mkdir -p ${INSTALL_PATH}/usr/include

          echo "--- Copying Boot Files ---"
          cp arch/x86/boot/bzImage ${INSTALL_PATH}/boot/vmlinuz-${KERNEL_VERSION}
          cp System.map ${INSTALL_PATH}/boot/System.map-${KERNEL_VERSION}
          cp .config ${INSTALL_PATH}/boot/config-${KERNEL_VERSION}

          echo "--- Installing Modules ---"
          make modules_install INSTALL_MOD_PATH=${INSTALL_PATH}

          echo "--- Installing Full Kernel Headers ---"
          rsync -a --exclude='*.o' --exclude='*.ko' --exclude='*.a' --exclude='*.mod' \
                --include='*/' --include='Makefile*' --include='Module.symvers' \
                --include='.config' --include='include/**' --include='arch/x86/**' \
                --include='scripts/**' --include='tools/**' --exclude='*' \
                . ${INSTALL_PATH}/usr/src/linux-headers-${KERNEL_VERSION}/

          echo "--- Installing User-Space Headers ---"
          make headers_install INSTALL_HDR_PATH=${INSTALL_PATH}/usr

          echo "--- Creating Symlinks ---"
          ln -sf /usr/src/linux-headers-${KERNEL_VERSION} ${INSTALL_PATH}/lib/modules/${KERNEL_VERSION}/build
          ln -sf /usr/src/linux-headers-${KERNEL_VERSION} ${INSTALL_PATH}/lib/modules/${KERNEL_VERSION}/source

          echo "--- Running depmod ---"
          depmod -b ${INSTALL_PATH} -F System.map ${KERNEL_VERSION}

          echo "--- Creating Tarball ---"
          cd ${GITHUB_WORKSPACE}
          tar -czvf linux-kernel-package-${KERNEL_VERSION}.tar.gz -C ${INSTALL_DIR_NAME} .

      - name: Upload Kernel Package
        uses: actions/upload-artifact@v4
        with:
          name: linux-kernel-package-${{ env.KERNEL_VERSION }}
          path: linux-kernel-package-${{ env.KERNEL_VERSION }}.tar.gz
          retention-days: 90

      - name: Upload Installation Guide
        uses: actions/upload-artifact@v4
        with:
          name: installation-guide
          path: _install/INSTALL.md
          retention-days: 90