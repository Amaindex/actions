name: Build Linux Kernel and Upload to Artifacts

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build (e.g., ax)'
        required: true
        default: 'ax'

jobs:
  build-kernel:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout linux repository
        uses: actions/checkout@v4
        with:
          repository: amaindex/linux
          ref: ${{ github.event.inputs.branch }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc bison flex libelf-dev libssl-dev \
            gcc-aarch64-linux-gnu

      - name: Configure kernel
        run: |
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            make defconfig
          elif [ "${{ matrix.arch }}" = "arm64" ]; then
            make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- defconfig
          fi

      - name: Build kernel
        run: |
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            make -j$(nproc)
          elif [ "${{ matrix.arch }}" = "arm64" ]; then
            make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)
          fi

      - name: Package kernel
        run: |
          mkdir -p kernel-package
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            cp arch/x86/boot/bzImage kernel-package/
          elif [ "${{ matrix.arch }}" = "arm64" ]; then
            cp arch/arm64/boot/Image kernel-package/
          fi
          tar -czvf linux-kernel-${{ matrix.arch }}.tar.gz -C kernel-package .

      - name: Upload kernel artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-kernel-${{ matrix.arch }}
          path: linux-kernel-${{ matrix.arch }}.tar.gz 
          retention-days: 90